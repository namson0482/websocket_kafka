version: "3.7"

networks:
  kafka-net:
    name: kafka-net
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/24

services:
  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    hostname: kafka
    restart: "no"
    networks:
      kafka-net:
        ipv4_address: 10.5.0.2
    ports:
      - "2181:2181"

  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    hostname: kafka
    restart: "no"
    networks:
      kafka-net:
        ipv4_address: 10.5.0.3
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-10.5.0.3}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  websocket_producer:
    image: "namson0482/kafka-websocket-producer:1.0"
    container_name: "kafka-websocket-producer-container"
    ports:
      - "8080:8080" #<Computer_port>:<Container_port>
    networks:
      kafka-net:
        ipv4_address: 10.5.0.4
    restart: on-failure
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:29092
      SPRING_PROFILES_ACTIVE: "docker-env"
      DATA_FILE: "/temp/"
    depends_on:
      - "kafka"

  websocket_consumer:
      image: "namson0482/kafka-websocket-consumer:1.0"
      container_name: "kafka-websocket-consumer-container"
      ports:
        - "8082:8082" #<Computer_port>:<Container_port>
# Uncomment code below if you want to mount local directory to container directory
#      volumes:
#        - type: bind
#          source: /Users/macbook/Documents/Docs/Tasks/stored # Folder archive the raw files
#          target: /temp/
      networks:
        kafka-net:
          ipv4_address: 10.5.0.5
      restart: on-failure
      environment:
        SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:29092
        SPRING_PROFILES_ACTIVE: "docker-env"
        DATA_FILE: "/temp/"
      depends_on:
        - "kafka"
        - "websocket_producer"

  websocket_frontend:
    image: "namson0482/websocket-frontend:1.0"
    container_name: "websocket-frontend-container"
    ports:
      - "7070:80"
    networks:
      kafka-net:
        ipv4_address: 10.5.0.6
    depends_on:
      - "check-kafka-started"
      - "websocket_producer"
      - "websocket_consumer"

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    networks:
      kafka-net:
        ipv4_address: 10.5.0.7
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - "kafka"

  check-kafka-started:
    image: jwilder/dockerize:0.6.1
    depends_on:
      - kafka
    command: 'dockerize -wait=tcp://kafka:29092'


